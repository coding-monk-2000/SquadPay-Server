name: CI

on:
  push:
    branches:
      - master 
  pull_request:
    branches:
      - master 
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name:  Run Unit Tests
        run: npm test -- --coverage

  coverity-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/master'
    steps:
      - name: ⬇Checkout code
        uses: actions/checkout@v3

      - name: Install required tools
        run: sudo apt-get update && sudo apt-get install -y wget tar

      - name: Download Coverity Analysis Tool
        run: |
          wget https://scan.coverity.com/download/linux64 --post-data "token=${{ secrets.COVERITY_TOKEN }}&project=$(echo $GITHUB_REPOSITORY | sed 's/\//%2F/g')" -O coverity_tool.tgz
          tar xzf coverity_tool.tgz

      - name: Build with Coverity
        run: |
          ./cov-analysis-linux64-*/bin/cov-build --dir cov-int npm run build || true

      - name: Submit to Coverity Scan
        env:
          COVERITY_TOKEN: ${{ secrets.COVERITY_TOKEN }}
          COVERITY_EMAIL: ${{ secrets.COVERITY_EMAIL }}
        run: |
          tar czf cov-int.tgz cov-int
          curl --form token=$COVERITY_TOKEN \
               --form email=$COVERITY_EMAIL \
               --form file=@cov-int.tgz \
               --form version="$(git describe --always --tags || echo 'unknown')" \
               --form description="GitHub Actions CI build" \
               https://scan.coverity.com/builds?project=$(echo $GITHUB_REPOSITORY | sed 's/\//%2F/g')
